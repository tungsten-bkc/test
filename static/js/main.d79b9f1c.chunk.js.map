{"version":3,"sources":["reportWebVitals.js","LikeButton.jsx","Article.jsx","components/FooBar.jsx","components/Hoge.jsx","Blog.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LikeButton","props","useState","count","counter","limit","release","countUp","add","useEffect","document","getElementById","addEventListener","removeEventListener","id","Article","isPublished","toggulePublished","title","htmlFor","type","checked","onClick","Foo","Bar","Hoge","React","Component","Blog","ReactDOM","render","StrictMode"],"mappings":"+JAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cC4BCQ,EAjCG,SAACC,GAAS,IAAD,EACEC,mBAAS,GADX,mBAChBC,EADgB,KACTC,EADS,OAECF,oBAAS,GAFV,mBAEhBG,EAFgB,KAEVC,EAFU,KAIjBC,EAAS,WACXH,EAAQD,EAAQ,IAGdK,EAAK,WACPF,GAASD,IAgBb,OAbAI,qBAAU,WAMF,OALAC,SAASC,eAAe,WAAWC,iBAAiB,QAASL,GAC7DG,SAASC,eAAe,YAAYC,iBAAiB,QAASJ,GAC1DL,GAAS,IACTC,EAAQ,GAEL,WACHM,SAASC,eAAe,WAAWE,oBAAoB,QAASN,MAErE,CAACF,IAKJ,qCACA,yBAAQS,GAAK,UAAb,2CAA8BX,KAC9B,wBAAQW,GAAK,WAAb,kECROC,EAnBA,SAACd,GAAU,IAAD,EACmBC,oBAAS,GAD5B,mBACdc,EADc,KACDC,EADC,KAGrB,OACI,gCACI,6BAAKhB,EAAMiB,QACX,uBAAOC,QAAQ,QAAf,sCACA,uBAAOC,KAAK,WACZC,QAAUL,EACVF,GAAG,QACHQ,QAAS,kBAAIL,GAAkBD,MAE/B,cAAC,EAAD,CACAb,MAAQF,EAAME,YCdnB,SAASoB,IACZ,OACI,gDAID,IAAMC,EAAM,WACf,OACI,4C,4BCRaC,E,4JACjB,WACI,OAAO,6C,GAFmBC,IAAMC,WC6CzBC,EA1CF,WA2BL,OAEI,gCACI,cAAC,EAAD,CACAV,MAAO,UAGP,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QClChBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.d79b9f1c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst LikeButton =(props)=>{\r\n    const [count, counter] = useState(0);\r\n    const [limit,release] = useState(true);\r\n\r\n    const countUp =() =>{\r\n        counter(count + 1);\r\n    }\r\n\r\n    const add =()=>{\r\n        release(!limit);\r\n    }\r\n    \r\n    useEffect(() => {\r\n            document.getElementById('counter').addEventListener('click', countUp);\r\n            document.getElementById('limitter').addEventListener('click', add);\r\n            if (count >= 10) {\r\n                counter(0);\r\n            }\r\n            return () => {\r\n                document.getElementById('counter').removeEventListener('click', countUp);\r\n            };\r\n        }, [limit]);\r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n        <button id ={\"counter\"}>いいね数：{count}</button>\r\n        <button id ={\"limitter\"}>もっといいねする</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LikeButton","import React, {useState} from 'react';\r\nimport LikeButton from './LikeButton'\r\n\r\nconst Article =(props) =>{\r\n    const [isPublished, toggulePublished] = useState(false);\r\n\r\n    return(\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n            <label htmlFor=\"check\">公開状態</label>\r\n            <input type=\"checkbox\" \r\n            checked ={isPublished} \r\n            id=\"check\" \r\n            onClick={()=>toggulePublished(!isPublished)}\r\n            />\r\n            <LikeButton \r\n            count ={props.count}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Article;","import React from 'react'\r\n\r\nexport function Foo(){\r\n    return (\r\n        <h2>Fooooooooooooo</h2>\r\n    )\r\n}\r\n\r\nexport const Bar = ()=>{\r\n    return(\r\n        <h2>Baaaaaaar</h2>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default class Hoge extends React.Component{\r\n    render(){\r\n        return(<h2>hogeeee</h2>)\r\n    }\r\n}","import React from 'react';\r\nimport Article from './Article';\r\nimport * as BarFoo from './components/FooBar';\r\nimport Hoge from './components/Hoge';\r\n\r\nconst Blog = ()=>{\r\n\r\n    \r\n\r\n    // componentDidMount(){\r\n    //     document.getElementById('counter').addEventListener('click',this.countUp)\r\n    // }\r\n\r\n    // componentDidUpdate(){\r\n    //     if(this.state.count >=10){\r\n    //         this.setState({\r\n    //             count: 0\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // componentWillUnmount(){\r\n    //     document.getElementById('counter').removeEventListener('click',this.countUp)\r\n    // }\r\n\r\n// 公開状態を反転させる関数\r\n// 現在のカウントにプラス１する関数\r\n    // countUp =() =>{\r\n    //     this.setState({\r\n    //         count:this.state.count + 1\r\n    //     })\r\n    // }\r\n        return(\r\n            \r\n            <div>\r\n                <Article \r\n                title={\"React\"}\r\n                // count={this.state.count}\r\n                />\r\n                <BarFoo.Foo/>\r\n                <BarFoo.Bar/>\r\n                <Hoge/>\r\n            </div>\r\n        \r\n        )\r\n        }\r\n\r\nexport default Blog;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Blog from './Blog';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blog />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}